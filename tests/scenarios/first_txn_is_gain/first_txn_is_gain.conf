---
# This is a regression test for a bug in capgain gains analysis. Due to the
# approach with cumsum().interpolate().diff() to smoothen out the gains, there
# was the problem of the very first gain in an account being ignoring in the
# returns calculation if it was also the very first transaction in that
# account.
#
# We cover two scenarios here: A gain being the very first transaction overall,
# and a gain being the very first transaction of a particular account.
accounts:
  - name: "FirstTxnIsGainAndVeryFirstTxn"
    active: true
    asset-type: investment
    transactions:
      # Expected outcome: The initial txn accounts for a 1k gain. How it factors
      # into the returns calculation is a bit of a wild card, but it definitely
      # should not be completely discarded from the total gains.
      - {date: 2010-01-01, value: '1000.0', isneutral: false}
      - {date: 2014-01-02, value: '-7000.0', isneutral: true}
      - {date: 2015-01-02, value: '-1000.0', isneutral: true}
    balances:
      - {date: 2011-01-01, balance: '1000.0'}
      - {date: 2012-01-01, balance: '2000.0'}
      - {date: 2013-01-01, balance: '4000.0'}
      - {date: 2014-01-01, balance: '8000.0'}


  - name: "FirstTxnIsGain"
    active: true
    asset-type: investment
    transactions:
      # During 2013, the invested amount is 1000 (lingering on the other
      # account), so while these 1000 are an "infinite return" for *this*
      # account, it should be considered a 100% return overall for 2013.
      - {date: 2015-01-01, value: '1000.0', isneutral: false}
    balances:
      - {date: 2016-01-01, balance: '2000.0'}
      - {date: 2017-01-01, balance: '4000.0'}
      - {date: 2018-01-01, balance: '8000.0'}

# Expected total gains:
# 500 + 500 + 1000 + 2000 + 4000 + 1000 + 1000 + 2000 + 4000 = 16000 (not 15000!)

# vim:ft=yaml
